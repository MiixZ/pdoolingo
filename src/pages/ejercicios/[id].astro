---
import type { Ejercicio } from "@interfaces/Ejercicio";
import type { Respuesta } from "@interfaces/Respuesta";

import EjercicioLayout from "@layouts/EjercicioLayout.astro";

import { getEjercicio } from "@services/ejercicios";
import { getUsuarioID } from "@services/usuario";
import { getRespuestasEjercicio } from "@services/ejercicios";

import Cuerpo from "@components/ejercicios/in/cuerpo";

const { id } = Astro.params;
const ejercicio: Ejercicio | null = await getEjercicio(Number(id));

if (!ejercicio) {
  return Astro.redirect("/home");
}

const respuestas: Respuesta[] = await getRespuestasEjercicio(Number(id));

const url = new URL(Astro.request.url);
const id_usuario = url.searchParams.get("id_usuario");

if (!id_usuario) {
  return Astro.redirect("/home");
}

const usuario = await getUsuarioID(id_usuario);
---

<EjercicioLayout
  title="PDOOLingo - Ejercicio"
  ejercicio={ejercicio}
  usuario={usuario}
>
  <header class="flex flex-col gap-4 w-full h-auto bg-slate-700 bg-ejercicio-background bg-center bg-custom bg-no-repeat text-white rounded-xl p-10">
    <span class="h-auto text-3xl">
        {ejercicio?.enunciado}
    </span>

    <span class="rounded-xl p-5 w-full lg:w-1/2 mx-auto text-center text-2xl to-transparent">
      {(() => {
        switch (ejercicio.tipo) {
          case "parejas":
            return "Junta una pareja de palabras que creas que puedan ser correctas. ¡Consigue emparejar a todas las respuestas correctas y gana!";
          case "pescar":
            return "¡Hora de pescar! Arrastra las respuestas correctas a la pecera para poder completar el ejercicio.";
          case "texto":
            return ;
          case "rellenar":
            return ;
          default:
            return ;
        }
      })()}
    </span>
  </header>

  <Cuerpo ejercicio={ejercicio} respuestas={respuestas} id_usuario={id_usuario} usuario={usuario} client:load></Cuerpo>
</EjercicioLayout>
